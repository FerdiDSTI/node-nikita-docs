{"data":{"page":{"html":"<h1 id=\"developer-information\"><a href=\"#developer-information\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Developer information</h1>\n<div class=\"toc\">\n<h2><a href=\"#toc\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<ul>\n<li><a href=\"#introduction\">Introduction</a></li>\n<li>\n<p><a href=\"#project-layout\">Project layout</a></p>\n<ul>\n<li><a href=\"#core-engine\">Core engine</a></li>\n<li><a href=\"#actions\">Actions</a></li>\n<li><a href=\"#utils-function\">Utils function</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#tests-execution\">Tests execution</a></p>\n<ul>\n<li><a href=\"#ssh-or-locally\">SSH or locally</a></li>\n<li><a href=\"#customization\">Customization</a></li>\n<li><a href=\"#environments\">Environments</a></li>\n<li><a href=\"#docker\">Docker</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<h2 id=\"introduction\"><a href=\"#introduction\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h2>\n<p>You are encouraged to <a href=\"/about/contribute/\">contribute</a> to Nikita. There are multiple way to offer assistance to the project. To fix and write actions, you will have get your hands dirty and dive into the source code. This page describe the project layout and how to run the tests.</p>\n<h2 id=\"project-layout\"><a href=\"#project-layout\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Project layout</h2>\n<p>Nikita is organized as one monolithic GIT repository. It includes the core engine, user actions as well as some utils functions.</p>\n<h3 id=\"core-engine\"><a href=\"#core-engine\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Core engine</h3>\n<p>Core engine modules are at the root of the \"./lib\" directory.</p>\n<ul>\n<li>\"index\"<br>\nThe main Nikita entry point when issuing <code class=\"language-text\">require(&#39;nikita&#39;)</code>.</li>\n<li>\"register\"<br>\nRegister actions into the global namespace. All actions available by default are listed in this module.</li>\n<li>\"registry\"<br>\nManagement facility to register and unregister actions.</li>\n<li>\"session\"<br>\nThe Nikita session where most of the logic is wired.</li>\n</ul>\n<h3 id=\"actions\"><a href=\"#actions\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Actions</h3>\n<p>Actions modules are all the modules in the \"./lib\" directory which are neither at the root of the directory nor inside the \"./lib/misc\" directory.</p>\n<h3 id=\"utils-function\"><a href=\"#utils-function\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Utils function</h3>\n<p>Utils function exports simple JavaScript functions and are located inside the \"./lib/misc\" directory. </p>\n<h2 id=\"tests-execution\"><a href=\"#tests-execution\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tests execution</h2>\n<p>Nikita target Unix-like system including Linux and macOS. Windows is not supported as a targeting node where to execute actions. It is however know to host Nikita. This mean you can run Nikita from a Windows host as long as you are targeting Linux nodes over SSH.</p>\n<p>Tests are executed with <a href=\"https://mochajs.org/\">Mocha</a> and <a href=\"https://shouldjs.github.io/\">Should.js</a>. They are all located inside the \"./test\" folder.</p>\n<p>For the tests to execute successfully, you must:   </p>\n<ul>\n<li>be online (attempt to fetch an ftp file)</li>\n<li>be able to ssh yourself (eg <code class=\"language-text\">ssh $(whoami)@localhost</code>) without a password</li>\n</ul>\n<p><code class=\"language-text\">npm test</code> execute the full test suite while <code class=\"language-text\">./node_modules/.bin/mocha test/${glob}</code> execute a subset of the test suite.</p>\n<p>For example, to only test the <code class=\"language-text\">nikita.file.ini</code> actions, run <code class=\"language-text\">./node_modules/.bin/mocha test/file.ini/*.coffee</code></p>\n<h3 id=\"ssh-or-locally\"><a href=\"#ssh-or-locally\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSH or locally</h3>\n<p>Why even choose? All tests when it makes sense are executed twice. Once without an SSH connection and once with an SSH connection pointing to localhost. To achieve this behavior, we extended <a href=\"https://mochajs.org/\">Mocha</a> by providing an alternative to the <code class=\"language-text\">it</code> function in the name of <code class=\"language-text\">they</code>. You can find it in the <a href=\"https://github.com/adaltas/node-ssh2-they\">ssh2-they package</a>.</p>\n<p>For example, this test will only be executed locally:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">nikita <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Simple Test'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Check a file is touched'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    nikita\n    <span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">touch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/a_file'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/a_file'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>While the same test using <code class=\"language-text\">they</code> will be executed locally and remotely:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">nikita <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\nthey <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'they'</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Simple Test'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">they</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Check a file is touched'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>ssh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">nikita</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>ssh<span class=\"token punctuation\">:</span> ssh<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">touch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/a_file'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/a_file'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"customization\"><a href=\"#customization\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customization</h3>\n<p>Tests will look by default for a configuration module located at \"./test\" file located inside \"./test.coffee\". If they do not find it, they will copy the default file \"./test.sample.coffee\" into \"./test.coffee\". Use the sample file as a starting point to configure your own environment.</p>\n<p>You can customize the path to the configuration module by setting the environmental variable named \"NIKITA_TEST_MODULE\".</p>\n<h3 id=\"environments\"><a href=\"#environments\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Environments</h3>\n<p>Some tests depends on a particular settings to run successfully. Some actions are specific to a particular Linux distribution or issue internally alternatives commands which must be validated. Other actions depends on a service which is not always available on the hosts machine such as a database connection.</p>\n<p>Based on your environment support, targeted tests may be activated from the configuration. For example, to activate the MariaDB tests, set the <code class=\"language-text\">disable_db</code> property to <code class=\"language-text\">true</code> and configure the <code class=\"language-text\">db.mariadb</code> properties accordingly.</p>\n<h3 id=\"docker\"><a href=\"#docker\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker</h3>\n<p>To ensure tests are executed in a proper environment, we leverage <a href=\"https://docs.docker.com/\">Docker</a> and <a href=\"https://docs.docker.com/compose/\">Docker Compose</a>. To each environment corresponds a directory inside the \"./env\" folder. Inside each folder, you will find the \"docker-compose.yml\" declaration file and its associated resources.</p>\n<ul>\n<li><code class=\"language-text\">docker-compose.yml</code><br>\nThe <a href=\"https://docs.docker.com/compose/\">Docker Compose</a> file declare the Nikita container with its test environment as well as its service dependencies such as databases services.</li>\n<li><code class=\"language-text\">Dockerfile</code>\nThe <a href=\"https://docs.docker.com/engine/reference/builder/\">Dockerfile</a> declare instructions to build the containers</li>\n<li><code class=\"language-text\">test.coffee</code>\nThe configuration file is used to activate selected tests and configured the Nikita sessions executed inside.</li>\n</ul>\n<p>The commands to execute the tests are commons to every Docker environments and provide a lot of flexibility. From any environment directory:</p>\n<ul>\n<li><code class=\"language-text\">docker-compose up --abort-on-container-exit</code><br>\nRun the all test suite from the host shell.</li>\n<li><code class=\"language-text\">docker-compose run --rm nodejs</code><br>\nEnter inside the Nikita container and execute your commands.</li>\n<li><code class=\"language-text\">docker-compose run --rm nodejs &#39;test/**/*.coffee&#39;</code><br>\nRun a subset of the tests from the host shell.</li>\n</ul>\n<p>Here's an example to run tests on CentOS 7:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Download the source code</span>\n<span class=\"token function\">git</span> clone https://github.com/adaltas/node-nikita.git nikita\n<span class=\"token function\">cd</span> nikita\n<span class=\"token comment\"># Install dependencies with NPM or Yarn</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span>\n<span class=\"token comment\"># Move to your targeted environment</span>\n<span class=\"token function\">cd</span> env/centos7\n<span class=\"token comment\"># Run all tests</span>\ndocker-compose up --abort-on-container-exit\n<span class=\"token comment\"># Enter bash console</span>\ndocker-compose run --rm nodejs\n<span class=\"token comment\"># Run a subset of the tests</span>\ndocker-compose run --rm nodejs test/core</code></pre></div>","fields":{"slug":"/about/developers/","edit_url":"https://github.com/adaltas/node-nikita-docs/edit/master/src/md/about/developers.md"},"frontmatter":{"title":"Developer","description":null,"keywords":null}}},"pageContext":{}}