{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/doc.js"],"names":["__webpack_exports__","_ref","data","Glamor","createElement","_components_doc__WEBPACK_IMPORTED_MODULE_1__","page","title","description","keywords","Layout","state","open","breakpoint","componentDidMount","window","innerWidth","this","setState","render","_this2","_this$props","props","children","classes","site","siteMetadata","onToggle","handleClickLink","menu","edges","forEach","edge","slugs","node","fields","slug","split","filter","part","parentMenu","id","join","frontmatter","sort","className","root","react_helmet__WEBPACK_IMPORTED_MODULE_12___default","a","meta","name","content","lang","_Drawer__WEBPACK_IMPORTED_MODULE_17__","onClickModal","main","react__WEBPACK_IMPORTED_MODULE_11___default","Fragment","_shared_AppBar__WEBPACK_IMPORTED_MODULE_18__","onMenuClick","_shared_Content__WEBPACK_IMPORTED_MODULE_19__","_shared_Footer__WEBPACK_IMPORTED_MODULE_20__","drawer","_shared_Menu__WEBPACK_IMPORTED_MODULE_21__","Object","values","p1","p2","map","_shared_Nav__WEBPACK_IMPORTED_MODULE_22__","key","path","onClickLink","Component","_mui_withRoot__WEBPACK_IMPORTED_MODULE_14__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_13__","theme","backgroundColor","paddingTop","withTheme","gatsby__WEBPACK_IMPORTED_MODULE_16__","query","assign","_public_static_d_2774815564_json__WEBPACK_IMPORTED_MODULE_10__"],"mappings":"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","file":"component---src-pages-404-js-58f3eaababfc33842a62.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/doc'\n\nconst NotFoundPage = ({ data }) => (\n  <Layout\n    page={{\n      title: 'Page not found',\n      description: 'The requested page does not exist',\n      keywords: 'csv, node.js, 404, not found'\n    }}\n  >\n    <div>\n      <h1>NOT FOUND</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </div>\n  </Layout>\n)\n\nexport default NotFoundPage\n","// React\nimport React from 'react'\nimport Helmet from 'react-helmet'\n// Material UI\nimport { withStyles } from '@material-ui/core/styles'\nimport withRoot from './mui/withRoot'\nimport 'typeface-roboto'\n// Gatsby\nimport { StaticQuery, graphql } from 'gatsby'\n// Local\nimport Drawer from './Drawer'\nimport AppBar from './shared/AppBar'\nimport Content from './shared/Content'\nimport Footer from './shared/Footer'\nimport Menu from './shared/Menu'\nimport Nav from './shared/Nav'\n\n\nconst styles = theme => ({\n  root: {\n  },\n  content: {\n    backgroundColor: 'rgb(242,242,242)',\n    paddingTop: 60,\n  },\n})\n\nclass Layout extends React.Component {\n  state = {\n    open: true,\n    breakpoint: 960,\n  }\n  componentDidMount() {\n    if (window.innerWidth < this.state.breakpoint) {\n      this.setState({ open: false })\n    }\n  }\n  render() {\n    const { children, classes, data, page } = this.props\n    const site = data.site.siteMetadata\n    const onToggle = () => {\n      this.setState({ open: !this.state.open })\n    }\n    const handleClickLink = () => {\n      if(window.innerWidth < this.state.breakpoint){\n        this.setState({ open: false })\n      }\n    }\n    const menu = { children: {} }\n    data.menu.edges.forEach(edge => {\n      const slugs = edge.node.fields.slug.split('/').filter(part => part)\n      let parentMenu = menu\n      slugs.forEach(slug => {\n        if (!parentMenu.children[slug])\n          parentMenu.children[slug] = { data: {}, children: {} }\n        parentMenu = parentMenu.children[slug]\n      })\n      parentMenu.data = {\n        id: slugs.join('/'),\n        title: edge.node.frontmatter.title,\n        slug: edge.node.fields.slug,\n        sort: edge.node.frontmatter.sort || 99,\n      }\n    })\n    return (\n      <div className={classes.root}>\n        <Helmet\n          title={'NIKITA - ' + page.title}\n          meta={[\n            { name: 'description', content: page.description },\n            { name: 'keywords', content: page.keywords },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Drawer\n          breakpoint={this.state.breakpoint}\n          open={this.state.open}\n          onClickModal={onToggle}\n          main={\n            <>\n              <AppBar\n                onMenuClick={onToggle}\n                site={site}\n                open={this.state.open}\n              />\n              <div className={classes.content}>\n                <Content page={page}>{children}</Content>\n                <Footer site={site} />\n              </div>\n            </>\n          }\n          drawer={\n            <Menu>\n              {Object.values(menu.children)\n              .sort((p1, p2) => p1.data.sort > p2.data.sort)\n              .map(page => (\n                <Nav\n                  key={page.data.slug}\n                  menu={page}\n                  path={this.state.path}\n                  onClickLink={handleClickLink}\n                />\n              ))}\n            </Menu>\n          }\n        />\n      </div>\n    )\n  }\n}\n\nconst WrappedLayout = props => (\n  <StaticQuery\n    query={graphql`\n      query DocQuery {\n        site: site {\n          siteMetadata {\n            title\n            github {\n              url\n              title\n            }\n            issues {\n              url\n              title\n            }\n            footer {\n              title\n              content\n              links {\n                label\n                url\n              }\n              xs\n              sm\n            }\n          }\n        }\n        menu: allMarkdownRemark(\n          filter: {\n            frontmatter: { disabled: { eq: false } }\n            fields: { slug: { regex: \"/^/.+/\" } }\n          }\n          sort: { order: ASC, fields: [frontmatter___sort, fields___slug] }\n        ) {\n          edges {\n            node {\n              id\n              excerpt(pruneLength: 250)\n              frontmatter {\n                title\n                sort\n              }\n              fields {\n                slug\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Layout data={data} {...props} />}\n  />\n)\n\nexport default withRoot(withStyles(styles, { withTheme: true })(WrappedLayout))\n"],"sourceRoot":""}